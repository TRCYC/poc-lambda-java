plugins {
    id 'java'
    id 'application'
    id 'com.bmuschko.docker-remote-api' version '7.1.0' // Updated Docker plugin
}

group = 'com.example'
version = '1.0-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    // AWS Lambda dependencies
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    implementation 'com.amazonaws:aws-lambda-java-events:3.10.0'
    
    // Logging
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'ch.qos.logback:logback-classic:1.2.10'
    
    // Optional: Apache HttpClient for making HTTP requests
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    
    // JUnit 5 for testing
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
}

application {
    // Define the main class for the application
    mainClassName = 'com.rcyc.LambdaHandler'
}

// Docker tasks
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

tasks.named('jar') {
    archiveBaseName.set('app')
    archiveVersion.set('')
}

task buildDockerImage(type: DockerBuildImage) {
    inputDir = project.file('.')
    images.add("${project.group}/${project.name}:${project.version}")
}

task pushDockerImage(type: DockerPushImage) {
    dependsOn buildDockerImage
    images.add("${project.group}/${project.name}:${project.version}")
}

// Set the default tasks
defaultTasks 'clean', 'build'